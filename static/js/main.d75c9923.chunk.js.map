{"version":3,"sources":["robocard.js","robofriends.js","header.js","searchbar.js","scroll.js","errorboundary.js","App.js","actions.js","constants.js","reducers.js","serviceWorker.js","index.js"],"names":["RoboCard","_ref","id","name","email","react_default","a","createElement","className","src","concat","alt","RoboFriends","robots","map","ind","i","robocard","key","Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","Component","SearchBar","onSearchChange","onResetClick","onSearchClick","textval","aria-label","onChange","placeholder","type","onClick","Scroll","props","style","overflowY","borderTop","height","children","ErrorBounday","_this","call","state","hasError","err","info","setState","App","disp","_this$props","searchedRobots","isPending","filter","toUpperCase","includes","searchField","searchbar","errorboundary","src_scroll","robofriends","header_Header","connect","SearchRobots","RequestRobots","error","dispatch","event","payload","target","fetch","then","res","json","data","catch","requestRobots","initialSearchState","initialRobotState","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","rootReducer","combineReducers","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","react_redux_es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d75c9923.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst RoboCard = ({id, name, email}) => {\r\n\treturn(\r\n\t\t\t<div className = \"cf bg-light-blue tc ma4 ml5 pa3 br3 b--black-10 w5 fl\">\r\n\t\t\t\t<img src = {`https://robohash.org/set_set4/${id}?size=200x200`} alt = \"roboface\" className= \"br-100 h4 w4 dib ba b--black-05 pa2 grow\"/>\r\n\t\t\t\t<h3 className = \"f4 mb2\">{name} </h3>\r\n\t\t\t\t<h3 className = \"f5 mb2\">{email}</h3>\r\n\t\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default RoboCard;","import React from 'react';\r\nimport RoboCard from './robocard.js';\r\n\r\nconst RoboFriends = ({robots}) =>{\r\n\tconst RobList = robots.map( (ind,i) =>{\r\n\t\treturn <RoboCard key = {i} id = {ind.id} name = {ind.name} email = {ind.email} />\r\n\t});\r\n\treturn RobList;\r\n}\r\nexport default RoboFriends;","import React,{Component} from 'react';\r\nimport './App.css';\r\n\r\nexport class Header extends Component{\r\n\tshouldComponentUpdate(){\r\n\t\treturn false;\r\n\t}\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1 className = \"header\">Robo Cats</h1>\r\n\t\t\t</div>)\r\n\t}\r\n}","import React from 'react';\r\n\r\n/*class SearchBar extends Component{\r\n\tConstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state.\r\n\t}\r\n}*/\r\nconst SearchBar = ({onSearchChange, onSearchClick, onResetClick, textval})=>{\r\n\treturn(\r\n\t\t<div className=\"tc\">\r\n\t        <input className=\"input-reset bn black-80 bg-lightest-blue pa2 w-15 br2\" aria-label=\"Search box\" onChange={onSearchChange} placeholder=\"Enter Search Term\" value={textval} type=\"text\" name=\"search\" id=\"search\" />\r\n      \t\t{/*<input className=\"pa2 button-reset tc bn bg-animate bg-black-70 hover-bg-black white pointer w-10 br2\" onClick={onSearchClick} type=\"submit\" value=\"Search\" />*/}\r\n      \t\t<input className=\"pa2 button-reset tc bn bg-animate bg-black-70 hover-bg-black white pointer w-10 br2\" onClick={onResetClick} type=\"submit\" value=\"Reset\" />\r\n      \t</div>\r\n\t\t)\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\nconst Scroll = (props)=>{\r\n\treturn(\r\n\t\t<div className=\"pv4 ph2 tc-l\" style={{overflowY: \"scroll\", borderTop: \"2px solid black\" , height: \"35.5em\"}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBounday extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {hasError: false}\r\n\t}\r\n\r\n\tcomponentDidCatch(err, info){\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn (<h1>Oops facing some technical difficulties</h1>)\r\n\t\t}\r\n\t\treturn (this.props.children)\r\n\t}\r\n\r\n}\r\n\r\nexport default ErrorBounday;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport {connect} from 'react-redux';\r\nimport RoboFriends from './robofriends';\r\nimport {Header} from './header';\r\nimport SearchBar from './searchbar';\r\nimport Scroll from './scroll';\r\nimport ErrorBoundary from './errorboundary';\r\nimport {setSearchField,requestRobots} from './actions';\r\n\r\nconst mapStateToProps=(state)=>{\r\n  return {\r\n            searchField: state.SearchRobots.searchField,\r\n            robots: state.RequestRobots.robots,\r\n            isPending: state.RequestRobots.isPending,\r\n            error: state.RequestRobots.error\r\n          }\r\n}\r\n\r\nconst mapDispatcherToProps=(dispatch)=>{\r\n  return {\r\n    onSearchChange: (event)=>{\r\n      dispatch(setSearchField(event.target.value));},\r\n    onSearchClick: ()=> requestRobots(dispatch)\r\n  };\r\n}\r\n\r\nclass App extends Component {\r\n\r\n\r\n  componentDidMount(){\r\n    this.props.onSearchClick();\r\n  }\r\n\r\n  render() {\r\n    const {robots, isPending} = this.props;\r\n    let searchedRobots =[];\r\n    let disp;\r\n    if(!isPending){\r\n        searchedRobots = robots.filter(ind=>{\r\n                  return (ind.name.toUpperCase().includes(this.props.searchField.toUpperCase())\r\n                    || ind.email.toUpperCase().includes(this.props.searchField.toUpperCase()) )\r\n                });\r\n        disp = (<div>\r\n                  <SearchBar onSearchChange={this.props.onSearchChange} textval = {this.props.searchField} onSearchClick= {this.props.onSearchClick}/>\r\n                  <ErrorBoundary>\r\n                    <Scroll>\r\n                      <RoboFriends robots={searchedRobots} />\r\n                    </Scroll>\r\n                  </ErrorBoundary>\r\n                </div>)\r\n      }\r\n    else{\r\n      disp = <h1>Loading</h1>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        { disp }           \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatcherToProps)(App);\r\n\r\n /* constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searched: '',\r\n      robots: []\r\n    }\r\n  }*/\r\n\r\n  /*onSearchChange=(event)=>{\r\n    this.setState({searched: event.target.value});\r\n  }*/\r\n\r\n/*  onSearchClick=(event)=>{\r\n\r\n    this.props.onSearch\r\n    .then(robs=> this.setState({robots: robs.filter(ind=>{\r\n              return (ind.name.toUpperCase().includes(this.props.searchField.toUpperCase())\r\n                || ind.email.toUpperCase().includes(this.props.searchField.toUpperCase()) )})\r\n    }))\r\n    .catch(err=>console.log(err));\r\n  }*/\r\n\r\n  /*onResetClick=(event)=>{\r\n    this.props.onSearchChange();\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(res=> res.json())\r\n    .then(robs=> this.setState({robots: robs}))\r\n    .catch(err=>console.log(err));\r\n    this.componentDidMount;\r\n  }*/","import {SEARCHFIELD, REQUESTFAILURE, REQUESTPENDING, REQUESTSUCCESS} from './constants';\r\n//action creators actions:object action_creator: object assignment\r\nexport const setSearchField = (text) =>{\r\n\treturn {\r\n\t\ttype : SEARCHFIELD,\r\n\t\tpayload : text\r\n\t}\r\n}\r\n\r\nexport const requestRobots = (dispatch) =>{\r\n\tdispatch({ type: REQUESTPENDING });\r\n\tfetch(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then(res=> res.json())\r\n    .then(data=> dispatch({ type: REQUESTSUCCESS, payload: data}))\r\n    .catch(err => dispatch({type: REQUESTFAILURE, payload: err}));\r\n}","export const SEARCHFIELD = 'SEARCHFIELD';\r\nexport const REQUESTPENDING = 'REQUESTPENDING';\r\nexport const REQUESTSUCCESS = 'REQUESTSUCCESS';\r\nexport const REQUESTFAILURE = 'REQUESTFAILURE';","import {SEARCHFIELD, REQUESTFAILURE, REQUESTPENDING, REQUESTSUCCESS} from './constants';\r\n\r\nconst initialSearchState = {\r\n\tsearchField : ''\r\n}\r\n\r\nconst initialRobotState = {\r\n\trobots: [],\r\n\tisPending: true,\r\n\terror: ''\r\n}\r\n\r\nexport const SearchRobots = (state = initialSearchState, action = {} )=>{\r\n\tswitch(action.type){\r\n\t\tcase SEARCHFIELD:\r\n\t\t\treturn Object.assign({},state,{searchField: action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const RequestRobots = (state = initialRobotState, action = {} ) =>{\r\n\tswitch(action.type){\r\n\t\tcase REQUESTPENDING:\r\n\t\t\treturn Object.assign({},state,{isPending: true});\r\n\t\tcase REQUESTSUCCESS:\r\n\t\t\treturn Object.assign({},state,{isPending: false, robots: action.payload});\r\n\t\tcase REQUESTFAILURE:\r\n\t\t\treturn Object.assign({},state,{isPending: false, error: action.payload});\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport App from './App';\r\nimport {SearchRobots,RequestRobots} from './reducers';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\nconst rootReducer = combineReducers({SearchRobots,RequestRobots});\r\nconst store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\r\n\r\nReactDOM.render(\r\n\t<Provider store = {store}>\r\n\t\t<App className=\"bgc\"/>\r\n\t</Provider>, document.getElementById('root'));\r\n\t\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}